{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Projects","to","Header","className","headerStyles","header","title","role","aria-label","navList","navItem","activeClassName","activeNavItem","Layout","props","children","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"6FAAA,wDAiBeA,UAbE,WACf,OACE,kBAAC,IAAD,KACE,4BAAI,kBAAC,IAAD,CAAMC,GAAI,0CAAV,aACJ,6LAGA,0C,4FCkBSC,EAzBA,WAEb,OACE,yBAAKC,UAAWC,IAAaC,QAE3B,kBAAC,IAAD,CAAMF,UAAWC,IAAaE,MAAOL,GAAI,KAAK,sDAA2B,0BAAMM,KAAK,MAAMC,aAAW,QAA5B,QAEzE,wBAAIL,UAAWC,IAAaK,SAC1B,4BACE,kBAAC,IAAD,CAAMN,UAAWC,IAAaM,QAAST,GAAI,IAAKU,gBAAiBP,IAAaQ,eAA9E,UAEF,4BACE,kBAAC,IAAD,CAAMT,UAAWC,IAAaM,QAAST,GAAI,cAAeU,gBAAiBP,IAAaQ,eAAxF,eAEF,4BACE,kBAAC,IAAD,CAAMT,UAAWC,IAAaM,QAAST,GAAI,YAAaU,gBAAiBP,IAAaQ,eAAtF,aAEF,4BACE,kBAAC,IAAD,CAAMT,UAAWC,IAAaM,QAAST,GAAI,WAAYU,gBAAiBP,IAAaQ,eAArF,e,UCNKC,IAZA,SAACC,GAEd,OACE,yBAAKX,UAAU,aACb,kBAAC,EAAD,MAECW,EAAMC,Y,kCCVb,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-projects-js-4b2e99260a5541ff449c.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Link } from \"gatsby\"\n\nconst Projects = () => {\n  return (\n    <Layout>\n      <h3><Link to={'https://elevator-4bb03.firebaseapp.com'}>Elevator</Link></h3>\n      <p>A goal setting app with a focus on habit formation by completing a minimal action towards\n      your goal everyday. A react progressive web app built with Firebase.</p>\n\n      <p>Page WIP</p>\n\n    </Layout>\n  )\n}\n\nexport default Projects\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport headerStyles from './header.module.scss'\n\nconst Header = () => {\n\n  return (\n    <div className={headerStyles.header}>\n\n      <Link className={headerStyles.title} to={'/'}><h1>Hi, I'm Remy Bordignon <span role='img' aria-label='wooo'>ðŸ”¥</span></h1></Link>\n\n      <ul className={headerStyles.navList}>\n        <li>\n          <Link className={headerStyles.navItem} to={'/'} activeClassName={headerStyles.activeNavItem}>About</Link>\n        </li>\n        <li>\n          <Link className={headerStyles.navItem} to={'/experience'} activeClassName={headerStyles.activeNavItem}>Experience</Link>\n        </li>\n        <li>\n          <Link className={headerStyles.navItem} to={'/projects'} activeClassName={headerStyles.activeNavItem}>Projects</Link>\n        </li>\n        <li>\n          <Link className={headerStyles.navItem} to={'/contact'} activeClassName={headerStyles.activeNavItem}>Contact</Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from \"./header\"\nimport '../../node_modules/milligram'\n\nconst Layout = (props) => {\n\n  return (\n    <div className='container'>\n      <Header/>\n\n      {props.children}\n\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}